__init__.py
Python defines two types of packages, regular packages and namespace packages.
Regular packages are traditional packages as they existed in Python 3.2 and earlier.
A regular package is typically implemented as a directory containing an __init__.py file.
When a regular package is imported, this __init__.py file is implicitly executed, and the objects
it defines are bound to names in the package’s namespace.
The __init__.py file can contain the same Python code that any other module can contain, and Python 
will add some additional attributes to the module when it is imported.

Flask extensions
Extensions are extra packages that add functionality to a Flask application.
For example, an extension might add support for sending email or connecting to a database.
Some extensions add entire new frameworks to help build certain types of applications, like a REST API.
Finding Extensions
Flask extensions are usually named “Flask-Foo” or “Foo-Flask”. You can search PyPI for packages tagged with Framework :: Flask.
Flask-WTF é uma extensão.

SQLAlquemy
SQLAlchemy é uma poderosa biblioteca Python que serve como uma ponte
entre o mundo da programação orientada a objetos e o mundo dos bancos
de dados relacionais. 

URI
URI significa Uniform Resource Identifier e é um identificador único para localizar um recurso na internet. 
É como um endereço completo que aponta para um arquivo, uma página web, uma imagem ou qualquer outro recurso online.
Geralmente possui a seguinte estrutura: scheme://authority/path?query#fragment

Flask_SQLAlquemy
baixe, import, defina URI no próprio flask:
SQLite: sqlite:///meu_banco.db
PostgreSQL: postgresql://usuario:senha@host/banco
MySQL: mysql://usuario:senha@host/banco
depois crie modelos para lidar com os commandos para banco de dados. 

Como verificar se o servidor está em execução:
    # Verificar se o processo está em execução (no windows é no gerenciador de tarefas)
    ps aux | grep postgres

    # Tentar conectar-se ao servidor
    psql -h localhost -U meu_usuario -d meu_banco_de_dados (bash)

    # Verificar os logs (exemplo para sistemas Debian/Ubuntu)
    sudo tail -n 10 /var/log/postgresql/postgresql-13-main.log